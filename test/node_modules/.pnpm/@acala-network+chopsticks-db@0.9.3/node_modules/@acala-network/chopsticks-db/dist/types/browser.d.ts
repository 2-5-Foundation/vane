import { BlockEntry, Database, KeyValueEntry } from '@acala-network/chopsticks-core';
import { DBSchema, IDBPDatabase } from 'idb';
interface Schema extends DBSchema {
    keyValue: {
        key: string;
        value: string | null;
    };
    block: {
        key: string;
        value: BlockEntry;
        indexes: {
            byNumber: number;
        };
    };
}
export declare class IdbDatabase implements Database {
    datasource: Promise<IDBPDatabase<Schema>>;
    constructor(location: string);
    close(): Promise<void>;
    saveBlock(block: BlockEntry): Promise<void>;
    queryBlock(hash: `0x${string}`): Promise<BlockEntry | null>;
    queryBlockByNumber(number: number): Promise<BlockEntry | null>;
    queryHighestBlock(): Promise<BlockEntry | null>;
    deleteBlock(hash: `0x${string}`): Promise<void>;
    blocksCount(): Promise<number>;
    saveStorage(blockHash: `0x${string}`, key: `0x${string}`, value: `0x${string}` | null): Promise<void>;
    queryStorage(blockHash: `0x${string}`, key: `0x${string}`): Promise<KeyValueEntry | null>;
}
export {};
