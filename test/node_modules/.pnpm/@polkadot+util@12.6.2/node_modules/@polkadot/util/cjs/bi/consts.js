"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports._sqrt2pow53n = exports._2pow53n = exports._1Qn = exports._1Bn = exports._1Mn = exports._1000n = exports._100n = exports._10n = exports._9n = exports._8n = exports._7n = exports._6n = exports._5n = exports._4n = exports._3n = exports._2n = exports._1n = exports._0n = void 0;
const x_bigint_1 = require("@polkadot/x-bigint");
/**
 * @name _0n
 * @summary BigInt constant for 0.
 */
exports._0n = (0, x_bigint_1.BigInt)(0);
/**
 * @name _1n
 * @summary BigInt constant for 1.
 */
exports._1n = (0, x_bigint_1.BigInt)(1);
/**
 * @name _2n
 * @summary BigInt constant for 2.
 */
exports._2n = (0, x_bigint_1.BigInt)(2);
/**
 * @name _3n
 * @summary BigInt constant for 3.
 */
exports._3n = (0, x_bigint_1.BigInt)(3);
/**
 * @name _4n
 * @summary BigInt constant for 4.
 */
exports._4n = (0, x_bigint_1.BigInt)(4);
/**
 * @name _5n
 * @summary BigInt constant for 5.
 */
exports._5n = (0, x_bigint_1.BigInt)(5);
/**
 * @name _6n
 * @summary BigInt constant for 6.
 */
exports._6n = (0, x_bigint_1.BigInt)(6);
/**
 * @name _7n
 * @summary BigInt constant for 7.
 */
exports._7n = (0, x_bigint_1.BigInt)(7);
/**
 * @name _8n
 * @summary BigInt constant for 8.
 */
exports._8n = (0, x_bigint_1.BigInt)(8);
/**
 * @name _9n
 * @summary BigInt constant for 9.
 */
exports._9n = (0, x_bigint_1.BigInt)(9);
/**
 * @name _10n
 * @summary BigInt constant for 10.
 */
exports._10n = (0, x_bigint_1.BigInt)(10);
/**
 * @name _100n
 * @summary BigInt constant for 100.
 */
exports._100n = (0, x_bigint_1.BigInt)(100);
/**
 * @name _1000n
 * @summary BigInt constant for 1000.
 */
exports._1000n = (0, x_bigint_1.BigInt)(1000);
/**
 * @name _1Mn
 * @summary BigInt constant for 1,000,000 (million).
 */
exports._1Mn = (0, x_bigint_1.BigInt)(1000000);
/**
* @name _1Bn
* @summary BigInt constant for 1,000,000,000 (billion).
*/
exports._1Bn = (0, x_bigint_1.BigInt)(1000000000);
/**
* @name _1Qn
* @summary BigInt constant for 1,000,000,000,000,000,000 (quitillion).
*/
exports._1Qn = exports._1Bn * exports._1Bn;
/**
* @name _2pow53n
* @summary BigInt constant for MAX_SAFE_INTEGER
*/
exports._2pow53n = (0, x_bigint_1.BigInt)(Number.MAX_SAFE_INTEGER);
/**
 * @name _sqrt2pow53n
 * @summary BigInt constant for Math.sqrt(MAX_SAFE_INTEGER)
 */
exports._sqrt2pow53n = (0, x_bigint_1.BigInt)(94906265);
