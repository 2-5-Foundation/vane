{"version":3,"file":"jsondiffpatch.cjs.js","sources":["../src/processor.js","../src/pipe.js","../src/contexts/context.js","../src/clone.js","../src/contexts/diff.js","../src/contexts/patch.js","../src/contexts/reverse.js","../src/filters/trivial.js","../src/filters/nested.js","../src/filters/lcs.js","../src/filters/arrays.js","../src/filters/dates.js","../src/filters/texts.js","../src/diffpatcher.js","../src/formatters/base.js","../src/formatters/html.js","../src/formatters/annotated.js","../src/formatters/jsonpatch.js","../src/formatters/console.js","../src/date-reviver.js","../src/main.js"],"sourcesContent":["class Processor {\n  constructor(options) {\n    this.selfOptions = options || {};\n    this.pipes = {};\n  }\n\n  options(options) {\n    if (options) {\n      this.selfOptions = options;\n    }\n    return this.selfOptions;\n  }\n\n  pipe(name, pipeArg) {\n    let pipe = pipeArg;\n    if (typeof name === 'string') {\n      if (typeof pipe === 'undefined') {\n        return this.pipes[name];\n      } else {\n        this.pipes[name] = pipe;\n      }\n    }\n    if (name && name.name) {\n      pipe = name;\n      if (pipe.processor === this) {\n        return pipe;\n      }\n      this.pipes[pipe.name] = pipe;\n    }\n    pipe.processor = this;\n    return pipe;\n  }\n\n  process(input, pipe) {\n    let context = input;\n    context.options = this.options();\n    let nextPipe = pipe || input.pipe || 'default';\n    let lastPipe;\n    let lastContext;\n    while (nextPipe) {\n      if (typeof context.nextAfterChildren !== 'undefined') {\n        // children processed and coming back to parent\n        context.next = context.nextAfterChildren;\n        context.nextAfterChildren = null;\n      }\n\n      if (typeof nextPipe === 'string') {\n        nextPipe = this.pipe(nextPipe);\n      }\n      nextPipe.process(context);\n      lastContext = context;\n      lastPipe = nextPipe;\n      nextPipe = null;\n      if (context) {\n        if (context.next) {\n          context = context.next;\n          nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n        }\n      }\n    }\n    return context.hasResult ? context.result : undefined;\n  }\n}\n\nexport default Processor;\n","class Pipe {\n  constructor(name) {\n    this.name = name;\n    this.filters = [];\n  }\n\n  process(input) {\n    if (!this.processor) {\n      throw new Error('add this pipe to a processor before using it');\n    }\n    const debug = this.debug;\n    const length = this.filters.length;\n    const context = input;\n    for (let index = 0; index < length; index++) {\n      const filter = this.filters[index];\n      if (debug) {\n        this.log(`filter: ${filter.filterName}`);\n      }\n      filter(context);\n      if (typeof context === 'object' && context.exiting) {\n        context.exiting = false;\n        break;\n      }\n    }\n    if (!context.next && this.resultCheck) {\n      this.resultCheck(context);\n    }\n  }\n\n  log(msg) {\n    console.log(`[jsondiffpatch] ${this.name} pipe, ${msg}`);\n  }\n\n  append(...args) {\n    this.filters.push(...args);\n    return this;\n  }\n\n  prepend(...args) {\n    this.filters.unshift(...args);\n    return this;\n  }\n\n  indexOf(filterName) {\n    if (!filterName) {\n      throw new Error('a filter name is required');\n    }\n    for (let index = 0; index < this.filters.length; index++) {\n      const filter = this.filters[index];\n      if (filter.filterName === filterName) {\n        return index;\n      }\n    }\n    throw new Error(`filter not found: ${filterName}`);\n  }\n\n  list() {\n    return this.filters.map(f => f.filterName);\n  }\n\n  after(filterName) {\n    const index = this.indexOf(filterName);\n    const params = Array.prototype.slice.call(arguments, 1);\n    if (!params.length) {\n      throw new Error('a filter is required');\n    }\n    params.unshift(index + 1, 0);\n    Array.prototype.splice.apply(this.filters, params);\n    return this;\n  }\n\n  before(filterName) {\n    const index = this.indexOf(filterName);\n    const params = Array.prototype.slice.call(arguments, 1);\n    if (!params.length) {\n      throw new Error('a filter is required');\n    }\n    params.unshift(index, 0);\n    Array.prototype.splice.apply(this.filters, params);\n    return this;\n  }\n\n  replace(filterName) {\n    const index = this.indexOf(filterName);\n    const params = Array.prototype.slice.call(arguments, 1);\n    if (!params.length) {\n      throw new Error('a filter is required');\n    }\n    params.unshift(index, 1);\n    Array.prototype.splice.apply(this.filters, params);\n    return this;\n  }\n\n  remove(filterName) {\n    const index = this.indexOf(filterName);\n    this.filters.splice(index, 1);\n    return this;\n  }\n\n  clear() {\n    this.filters.length = 0;\n    return this;\n  }\n\n  shouldHaveResult(should) {\n    if (should === false) {\n      this.resultCheck = null;\n      return;\n    }\n    if (this.resultCheck) {\n      return;\n    }\n    const pipe = this;\n    this.resultCheck = context => {\n      if (!context.hasResult) {\n        console.log(context);\n        const error = new Error(`${pipe.name} failed`);\n        error.noResult = true;\n        throw error;\n      }\n    };\n    return this;\n  }\n}\n\nexport default Pipe;\n","import Pipe from '../pipe';\n\nexport default class Context {\n  setResult(result) {\n    this.result = result;\n    this.hasResult = true;\n    return this;\n  }\n\n  exit() {\n    this.exiting = true;\n    return this;\n  }\n\n  switchTo(next, pipe) {\n    if (typeof next === 'string' || next instanceof Pipe) {\n      this.nextPipe = next;\n    } else {\n      this.next = next;\n      if (pipe) {\n        this.nextPipe = pipe;\n      }\n    }\n    return this;\n  }\n\n  push(child, name) {\n    child.parent = this;\n    if (typeof name !== 'undefined') {\n      child.childName = name;\n    }\n    child.root = this.root || this;\n    child.options = child.options || this.options;\n    if (!this.children) {\n      this.children = [child];\n      this.nextAfterChildren = this.next || null;\n      this.next = child;\n    } else {\n      this.children[this.children.length - 1].next = child;\n      this.children.push(child);\n    }\n    child.next = this;\n    return this;\n  }\n}\n","const isArray =\n  typeof Array.isArray === 'function' ? Array.isArray : a => a instanceof Array;\n\nfunction cloneRegExp(re) {\n  const regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nexport default function clone(arg) {\n  if (typeof arg !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  const cloned = {};\n  for (const name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      cloned[name] = clone(arg[name]);\n    }\n  }\n  return cloned;\n}\n","import Context from './context';\nimport defaultClone from '../clone';\n\nclass DiffContext extends Context {\n  constructor(left, right) {\n    super();\n    this.left = left;\n    this.right = right;\n    this.pipe = 'diff';\n  }\n\n  setResult(result) {\n    if (this.options.cloneDiffValues && typeof result === 'object') {\n      const clone =\n        typeof this.options.cloneDiffValues === 'function'\n          ? this.options.cloneDiffValues\n          : defaultClone;\n      if (typeof result[0] === 'object') {\n        result[0] = clone(result[0]);\n      }\n      if (typeof result[1] === 'object') {\n        result[1] = clone(result[1]);\n      }\n    }\n    return Context.prototype.setResult.apply(this, arguments);\n  }\n}\n\nexport default DiffContext;\n","import Context from './context';\n\nclass PatchContext extends Context {\n  constructor(left, delta) {\n    super();\n    this.left = left;\n    this.delta = delta;\n    this.pipe = 'patch';\n  }\n}\n\nexport default PatchContext;\n","import Context from './context';\n\nclass ReverseContext extends Context {\n  constructor(delta) {\n    super();\n    this.delta = delta;\n    this.pipe = 'reverse';\n  }\n}\n\nexport default ReverseContext;\n","const isArray =\n  typeof Array.isArray === 'function'\n    ? Array.isArray\n    : function(a) {\n      return a instanceof Array;\n    };\n\nexport const diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (\n    typeof context.left === 'function' ||\n    typeof context.right === 'function'\n  ) {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : typeof context.left;\n  context.rightType = context.right === null ? 'null' : typeof context.right;\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n\n  if (context.left instanceof RegExp) {\n    if (context.right instanceof RegExp) {\n      context\n        .setResult([context.left.toString(), context.right.toString()])\n        .exit();\n    } else {\n      context.setResult([context.left, context.right]).exit();\n    }\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nexport const patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    if (context.left instanceof RegExp) {\n      const regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n      if (regexArgs) {\n        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n        return;\n      }\n    }\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n  }\n};\npatchFilter.filterName = 'trivial';\n\nexport const reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n  }\n};\nreverseFilter.filterName = 'trivial';\n","import DiffContext from '../contexts/diff';\nimport PatchContext from '../contexts/patch';\nimport ReverseContext from '../contexts/reverse';\n\nexport function collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  let result = context.result;\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n}\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nexport function objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  let name;\n  let child;\n  const propertyFilter = context.options.propertyFilter;\n  for (name in context.left) {\n    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n}\nobjectsDiffFilter.filterName = 'objects';\n\nexport const patchFilter = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  let name;\n  let child;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter.filterName = 'objects';\n\nexport const collectChildrenPatchFilter = function collectChildrenPatchFilter(\n  context,\n) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    if (\n      Object.prototype.hasOwnProperty.call(context.left, child.childName) &&\n      child.result === undefined\n    ) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nexport const reverseFilter = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  let name;\n  let child;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter.filterName = 'objects';\n\nexport function collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  const delta = {};\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n","/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nconst defaultMatch = function(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nconst lengthMatrix = function(array1, array2, match, context) {\n  const len1 = array1.length;\n  const len2 = array2.length;\n  let x, y;\n\n  // initialize empty matrix of len1+1 x len2+1\n  const matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nconst backtrack = function(matrix, array1, array2, context) {\n  let index1 = array1.length;\n  let index2 = array2.length;\n  const subsequence = {\n    sequence: [],\n    indices1: [],\n    indices2: [],\n  };\n\n  while (index1 !== 0 && index2 !== 0) {\n    const sameLetter =\n      matrix.match(array1, array2, index1 - 1, index2 - 1, context);\n    if (sameLetter) {\n      subsequence.sequence.unshift(array1[index1 - 1]);\n      subsequence.indices1.unshift(index1 - 1);\n      subsequence.indices2.unshift(index2 - 1);\n      --index1;\n      --index2;\n    } else {\n      const valueAtMatrixAbove = matrix[index1][index2 - 1];\n      const valueAtMatrixLeft = matrix[index1 - 1][index2];\n      if (valueAtMatrixAbove > valueAtMatrixLeft) {\n        --index2;\n      } else {\n        --index1;\n      }\n    }\n  }\n  return subsequence;\n};\n\nconst get = function(array1, array2, match, context) {\n  const innerContext = context || {};\n  const matrix = lengthMatrix(\n    array1,\n    array2,\n    match || defaultMatch,\n    innerContext,\n  );\n  const result = backtrack(\n    matrix,\n    array1,\n    array2,\n    innerContext,\n  );\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nexport default {\n  get,\n};\n","import DiffContext from '../contexts/diff';\nimport PatchContext from '../contexts/patch';\nimport ReverseContext from '../contexts/reverse';\n\nimport lcs from './lcs';\n\nconst ARRAY_MOVE = 3;\n\nconst isArray =\n  typeof Array.isArray === 'function' ? Array.isArray : a => a instanceof Array;\n\nconst arrayIndexOf =\n  typeof Array.prototype.indexOf === 'function'\n    ? (array, item) => array.indexOf(item)\n    : (array, item) => {\n        const length = array.length;\n        for (let i = 0; i < length; i++) {\n          if (array[i] === item) {\n            return i;\n          }\n        }\n        return -1;\n      };\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (let index1 = 0; index1 < len1; index1++) {\n    const val1 = array1[index1];\n    for (let index2 = 0; index2 < len2; index2++) {\n      const val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  const value1 = array1[index1];\n  const value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if (typeof value1 !== 'object' || typeof value2 !== 'object') {\n    return false;\n  }\n  const objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  let hash1;\n  let hash2;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nexport const diffFilter = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  const matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition,\n  };\n  let commonHead = 0;\n  let commonTail = 0;\n  let index;\n  let index1;\n  let index2;\n  const array1 = context.left;\n  const array2 = context.right;\n  const len1 = array1.length;\n  const len2 = array2.length;\n\n  let child;\n\n  if (\n    len1 > 0 &&\n    len2 > 0 &&\n    !matchContext.objectHash &&\n    typeof matchContext.matchByPosition !== 'boolean'\n  ) {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(\n      array1,\n      array2,\n      len1,\n      len2,\n    );\n  }\n\n  // separate common head\n  while (\n    commonHead < len1 &&\n    commonHead < len2 &&\n    matchItems(array1, array2, commonHead, commonHead, matchContext)\n  ) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (\n    commonTail + commonHead < len1 &&\n    commonTail + commonHead < len2 &&\n    matchItems(\n      array1,\n      array2,\n      len1 - 1 - commonTail,\n      len2 - 1 - commonTail,\n      matchContext,\n    )\n  ) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  let result;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a',\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a',\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result[`_${index}`] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  const trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  const trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  const seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);\n  const removedItems = [];\n  result = result || {\n    _t: 'a',\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result[`_${index}`] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  let detectMove = true;\n  if (\n    context.options &&\n    context.options.arrays &&\n    context.options.arrays.detectMove === false\n  ) {\n    detectMove = false;\n  }\n  let includeValueOnMove = false;\n  if (\n    context.options &&\n    context.options.arrays &&\n    context.options.arrays.includeValueOnMove\n  ) {\n    includeValueOnMove = true;\n  }\n\n  const removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    const indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      let isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (\n          let removeItemIndex1 = 0;\n          removeItemIndex1 < removedItemsLength;\n          removeItemIndex1++\n        ) {\n          index1 = removedItems[removeItemIndex1];\n          if (\n            matchItems(\n              trimmed1,\n              trimmed2,\n              index1 - commonHead,\n              index - commonHead,\n              matchContext,\n            )\n          ) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result[`_${index1}`].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result[`_${index1}`][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(\n              context.left[index1],\n              context.right[index2],\n            );\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n};\ndiffFilter.filterName = 'arrays';\n\nconst compare = {\n  numerically(a, b) {\n    return a - b;\n  },\n  numericallyBy(name) {\n    return (a, b) => a[name] - b[name];\n  },\n};\n\nexport const patchFilter = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  let index;\n  let index1;\n\n  const delta = context.delta;\n  const array = context.left;\n\n  // first, separate removals, insertions and modifications\n  let toRemove = [];\n  let toInsert = [];\n  const toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error(\n            'only removal or move can be applied at original array indices,' +\n              ` invalid diff type: ${delta[index][2]}`,\n          );\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0],\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index],\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    const indexDiff = delta[`_${index1}`];\n    const removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue,\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  const toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    const insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  const toModifyLength = toModify.length;\n  let child;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      const modification = toModify[index];\n      child = new PatchContext(\n        context.left[modification.index],\n        modification.delta,\n      );\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter.filterName = 'arrays';\n\nexport const collectChildrenPatchFilter = function collectChildrenPatchFilter(\n  context,\n) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'arraysCollectChildren';\n\nexport const reverseFilter = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = `_${context.delta[1]}`;\n      context\n        .setResult([\n          context.delta[0],\n          parseInt(context.childName.substr(1), 10),\n          ARRAY_MOVE,\n        ])\n        .exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  let name;\n  let child;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter.filterName = 'arrays';\n\nconst reverseArrayDeltaIndex = (delta, index, itemDelta) => {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray(itemDelta) && itemDelta[2] === 0) {\n    return `_${index}`;\n  }\n\n  let reverseIndex = +index;\n  for (const deltaIndex in delta) {\n    const deltaItem = delta[deltaIndex];\n    if (isArray(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        const moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        const moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (\n          moveFromIndex >= reverseIndex &&\n          moveToIndex < reverseIndex\n        ) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        const deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nexport function collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  const length = context.children.length;\n  let child;\n  const delta = {\n    _t: 'a',\n  };\n\n  for (let index = 0; index < length; index++) {\n    child = context.children[index];\n    let name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(\n        context.delta,\n        child.childName,\n        child.result,\n      );\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter.filterName = 'arraysCollectChildren';\n","export const diffFilter = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter.filterName = 'dates';\n","/* global diff_match_patch */\nimport dmp from 'diff-match-patch';\n\nconst TEXT_DIFF = 2;\nconst DEFAULT_MIN_LENGTH = 60;\nlet cachedDiffPatch = null;\n\nconst getDiffMatchPatch = function(required) {\n  /* jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    let instance;\n    /* eslint-disable camelcase, new-cap */\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance =\n        typeof diff_match_patch === 'function'\n          ? new diff_match_patch()\n          : new diff_match_patch.diff_match_patch();\n    } else if (dmp) {\n      try {\n        instance = dmp && new dmp();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    /* eslint-enable camelcase, new-cap */\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      const error = new Error('text diff_match_patch library not found');\n      // eslint-disable-next-line camelcase\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function(txt1, patch) {\n        const results = instance.patch_apply(\n          instance.patch_fromText(patch),\n          txt1,\n        );\n        for (let i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            const error = new Error('text patch failed');\n            error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      },\n    };\n  }\n  return cachedDiffPatch;\n};\n\nexport const diffFilter = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  const minLength =\n    (context.options &&\n      context.options.textDiff &&\n      context.options.textDiff.minLength) ||\n    DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength || context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  const diffMatchPatch = getDiffMatchPatch();\n  if (!diffMatchPatch) {\n    // diff-match-patch library not available,\n    // fallback to regular string replace\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  const diff = diffMatchPatch.diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter.filterName = 'texts';\n\nexport const patchFilter = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  const patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter.filterName = 'texts';\n\nconst textDeltaReverse = function(delta) {\n  let i;\n  let l;\n  let line;\n  let lineTmp;\n  let header = null;\n  const headerRegex = /^@@ +-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/;\n  let lineHeader;\n  const lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    const lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n\n      // fix header\n      lines[lineHeader] =\n        '@@ -' +\n        header[3] +\n        ',' +\n        header[4] +\n        ' +' +\n        header[1] +\n        ',' +\n        header[2] +\n        ' @@';\n    } else if (lineStart === '+') {\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nexport const reverseFilter = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter.filterName = 'texts';\n","import Processor from './processor';\nimport Pipe from './pipe';\nimport DiffContext from './contexts/diff';\nimport PatchContext from './contexts/patch';\nimport ReverseContext from './contexts/reverse';\nimport clone from './clone';\n\nimport * as trivial from './filters/trivial';\nimport * as nested from './filters/nested';\nimport * as arrays from './filters/arrays';\nimport * as dates from './filters/dates';\nimport * as texts from './filters/texts';\n\nclass DiffPatcher {\n  constructor(options) {\n    this.processor = new Processor(options);\n    this.processor.pipe(\n      new Pipe('diff')\n        .append(\n          nested.collectChildrenDiffFilter,\n          trivial.diffFilter,\n          dates.diffFilter,\n          texts.diffFilter,\n          nested.objectsDiffFilter,\n          arrays.diffFilter,\n        )\n        .shouldHaveResult(),\n    );\n    this.processor.pipe(\n      new Pipe('patch')\n        .append(\n          nested.collectChildrenPatchFilter,\n          arrays.collectChildrenPatchFilter,\n          trivial.patchFilter,\n          texts.patchFilter,\n          nested.patchFilter,\n          arrays.patchFilter,\n        )\n        .shouldHaveResult(),\n    );\n    this.processor.pipe(\n      new Pipe('reverse')\n        .append(\n          nested.collectChildrenReverseFilter,\n          arrays.collectChildrenReverseFilter,\n          trivial.reverseFilter,\n          texts.reverseFilter,\n          nested.reverseFilter,\n          arrays.reverseFilter,\n        )\n        .shouldHaveResult(),\n    );\n  }\n\n  options(...args) {\n    return this.processor.options(...args);\n  }\n\n  diff(left, right) {\n    return this.processor.process(new DiffContext(left, right));\n  }\n\n  patch(left, delta) {\n    return this.processor.process(new PatchContext(left, delta));\n  }\n\n  reverse(delta) {\n    return this.processor.process(new ReverseContext(delta));\n  }\n\n  unpatch(right, delta) {\n    return this.patch(right, this.reverse(delta));\n  }\n\n  clone(value) {\n    return clone(value);\n  }\n}\n\nexport default DiffPatcher;\n","const isArray =\n  typeof Array.isArray === 'function' ? Array.isArray : a => a instanceof Array;\n\nconst getObjectKeys =\n  typeof Object.keys === 'function'\n    ? obj => Object.keys(obj)\n    : obj => {\n      const names = [];\n      for (const property in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, property)) {\n          names.push(property);\n        }\n      }\n      return names;\n    };\n\nconst trimUnderscore = str => {\n  if (str.substr(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nconst arrayKeyToSortNumber = key => {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substr(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nconst arrayKeyComparer = (key1, key2) =>\n  arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n\nclass BaseFormatter {\n  format(delta, left) {\n    const context = {};\n    this.prepareContext(context);\n    this.recurse(context, delta, left);\n    return this.finalize(context);\n  }\n\n  prepareContext(context) {\n    context.buffer = [];\n    context.out = function(...args) {\n      this.buffer.push(...args);\n    };\n  }\n\n  typeFormattterNotFound(context, deltaType) {\n    throw new Error(`cannot format delta type: ${deltaType}`);\n  }\n\n  typeFormattterErrorFormatter(context, err) {\n    return err.toString();\n  }\n\n  finalize({ buffer }) {\n    if (isArray(buffer)) {\n      return buffer.join('');\n    }\n  }\n\n  recurse(context, delta, left, key, leftKey, movedFrom, isLast) {\n    const useMoveOriginHere = delta && movedFrom;\n    const leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n    if (typeof delta === 'undefined' && typeof key === 'undefined') {\n      return undefined;\n    }\n\n    const type = this.getDeltaType(delta, movedFrom);\n    const nodeType =\n      type === 'node' ? (delta._t === 'a' ? 'array' : 'object') : '';\n\n    if (typeof key !== 'undefined') {\n      this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n    } else {\n      this.rootBegin(context, type, nodeType);\n    }\n\n    let typeFormattter;\n    try {\n      typeFormattter =\n        this[`format_${type}`] || this.typeFormattterNotFound(context, type);\n      typeFormattter.call(\n        this,\n        context,\n        delta,\n        leftValue,\n        key,\n        leftKey,\n        movedFrom,\n      );\n    } catch (err) {\n      this.typeFormattterErrorFormatter(\n        context,\n        err,\n        delta,\n        leftValue,\n        key,\n        leftKey,\n        movedFrom,\n      );\n      if (typeof console !== 'undefined' && console.error) {\n        console.error(err.stack);\n      }\n    }\n\n    if (typeof key !== 'undefined') {\n      this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n    } else {\n      this.rootEnd(context, type, nodeType);\n    }\n  }\n\n  formatDeltaChildren(context, delta, left) {\n    const self = this;\n    this.forEachDeltaKey(delta, left, (key, leftKey, movedFrom, isLast) => {\n      self.recurse(\n        context,\n        delta[key],\n        left ? left[leftKey] : undefined,\n        key,\n        leftKey,\n        movedFrom,\n        isLast,\n      );\n    });\n  }\n\n  forEachDeltaKey(delta, left, fn) {\n    const keys = getObjectKeys(delta);\n    const arrayKeys = delta._t === 'a';\n    const moveDestinations = {};\n    let name;\n    if (typeof left !== 'undefined') {\n      for (name in left) {\n        if (Object.prototype.hasOwnProperty.call(left, name)) {\n          if (\n            typeof delta[name] === 'undefined' &&\n            (!arrayKeys || typeof delta[`_${name}`] === 'undefined')\n          ) {\n            keys.push(name);\n          }\n        }\n      }\n    }\n    // look for move destinations\n    for (name in delta) {\n      if (Object.prototype.hasOwnProperty.call(delta, name)) {\n        const value = delta[name];\n        if (isArray(value) && value[2] === 3) {\n          moveDestinations[value[1].toString()] = {\n            key: name,\n            value: left && left[parseInt(name.substr(1))],\n          };\n          if (this.includeMoveDestinations !== false) {\n            if (\n              typeof left === 'undefined' &&\n              typeof delta[value[1]] === 'undefined'\n            ) {\n              keys.push(value[1].toString());\n            }\n          }\n        }\n      }\n    }\n    if (arrayKeys) {\n      keys.sort(arrayKeyComparer);\n    } else {\n      keys.sort();\n    }\n    for (let index = 0, length = keys.length; index < length; index++) {\n      const key = keys[index];\n      if (arrayKeys && key === '_t') {\n        continue;\n      }\n      const leftKey = arrayKeys\n        ? typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10)\n        : key;\n      const isLast = index === length - 1;\n      fn(key, leftKey, moveDestinations[leftKey], isLast);\n    }\n  }\n\n  getDeltaType(delta, movedFrom) {\n    if (typeof delta === 'undefined') {\n      if (typeof movedFrom !== 'undefined') {\n        return 'movedestination';\n      }\n      return 'unchanged';\n    }\n    if (isArray(delta)) {\n      if (delta.length === 1) {\n        return 'added';\n      }\n      if (delta.length === 2) {\n        return 'modified';\n      }\n      if (delta.length === 3 && delta[2] === 0) {\n        return 'deleted';\n      }\n      if (delta.length === 3 && delta[2] === 2) {\n        return 'textdiff';\n      }\n      if (delta.length === 3 && delta[2] === 3) {\n        return 'moved';\n      }\n    } else if (typeof delta === 'object') {\n      return 'node';\n    }\n    return 'unknown';\n  }\n\n  parseTextDiff(value) {\n    const output = [];\n    const lines = value.split('\\n@@ ');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      const lineOutput = {\n        pieces: [],\n      };\n      const location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n      lineOutput.location = {\n        line: location[0],\n        chr: location[1],\n      };\n      const pieces = line.split('\\n').slice(1);\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        if (!piece.length) {\n          continue;\n        }\n        const pieceOutput = {\n          type: 'context',\n        };\n        if (piece.substr(0, 1) === '+') {\n          pieceOutput.type = 'added';\n        } else if (piece.substr(0, 1) === '-') {\n          pieceOutput.type = 'deleted';\n        }\n        pieceOutput.text = piece.slice(1);\n        lineOutput.pieces.push(pieceOutput);\n      }\n      output.push(lineOutput);\n    }\n    return output;\n  }\n}\n\nexport default BaseFormatter;\n","import BaseFormatter from './base';\n\nclass HtmlFormatter extends BaseFormatter {\n  typeFormattterErrorFormatter(context, err) {\n    context.out(`<pre class=\"jsondiffpatch-error\">${err}</pre>`);\n  }\n\n  formatValue(context, value) {\n    context.out(`<pre>${htmlEscape(JSON.stringify(value, null, 2))}</pre>`);\n  }\n\n  formatTextDiffString(context, value) {\n    const lines = this.parseTextDiff(value);\n    context.out('<ul class=\"jsondiffpatch-textdiff\">');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.out(\n        '<li><div class=\"jsondiffpatch-textdiff-location\">' +\n          `<span class=\"jsondiffpatch-textdiff-line-number\">${\n            line.location.line\n          }</span><span class=\"jsondiffpatch-textdiff-char\">${\n            line.location.chr\n          }</span></div><div class=\"jsondiffpatch-textdiff-line\">`,\n      );\n      const pieces = line.pieces;\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        /* global decodeURI */\n        const piece = pieces[pieceIndex];\n        context.out(\n          `<span class=\"jsondiffpatch-textdiff-${piece.type}\">${htmlEscape(\n            decodeURI(piece.text),\n          )}</span>`,\n        );\n      }\n      context.out('</div></li>');\n    }\n    context.out('</ul>');\n  }\n\n  rootBegin(context, type, nodeType) {\n    const nodeClass = `jsondiffpatch-${type}${\n      nodeType ? ` jsondiffpatch-child-node-type-${nodeType}` : ''\n    }`;\n    context.out(`<div class=\"jsondiffpatch-delta ${nodeClass}\">`);\n  }\n\n  rootEnd(context) {\n    context.out(\n      `</div>${\n        context.hasArrows\n          ? '<script type=\"text/javascript\">setTimeout(' +\n            `${adjustArrows.toString()},10);</script>`\n          : ''\n      }`,\n    );\n  }\n\n  nodeBegin(context, key, leftKey, type, nodeType) {\n    const nodeClass = `jsondiffpatch-${type}${\n      nodeType ? ` jsondiffpatch-child-node-type-${nodeType}` : ''\n    }`;\n    context.out(\n      `<li class=\"${nodeClass}\" data-key=\"${leftKey}\">` +\n        `<div class=\"jsondiffpatch-property-name\">${leftKey}</div>`,\n    );\n  }\n\n  nodeEnd(context) {\n    context.out('</li>');\n  }\n\n  /* jshint camelcase: false */\n  /* eslint-disable camelcase */\n\n  format_unchanged(context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, left);\n    context.out('</div>');\n  }\n\n  format_movedestination(context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, left);\n    context.out('</div>');\n  }\n\n  format_node(context, delta, left) {\n    // recurse\n    const nodeType = delta._t === 'a' ? 'array' : 'object';\n    context.out(\n      `<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-${nodeType}\">`,\n    );\n    this.formatDeltaChildren(context, delta, left);\n    context.out('</ul>');\n  }\n\n  format_added(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>');\n  }\n\n  format_modified(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n    this.formatValue(context, delta[0]);\n    context.out(\n      '</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">',\n    );\n    this.formatValue(context, delta[1]);\n    context.out('</div>');\n  }\n\n  format_deleted(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out('</div>');\n  }\n\n  format_moved(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatValue(context, delta[0]);\n    context.out(\n      `</div><div class=\"jsondiffpatch-moved-destination\">${delta[1]}</div>`,\n    );\n\n    // draw an SVG arrow from here to move destination\n    context.out(\n      /* jshint multistr: true */\n      '<div class=\"jsondiffpatch-arrow\" ' +\n        `style=\"position: relative; left: -34px;\">\n          <svg width=\"30\" height=\"60\" ` +\n        `style=\"position: absolute; display: none;\">\n          <defs>\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\n                 refx=\"2\" refy=\"4\"\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\n              </marker>\n          </defs>\n          <path d=\"M30,0 Q-10,25 26,50\"\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ` +\n        `stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\n          ></path>\n          </svg>\n      </div>`,\n    );\n    context.hasArrows = true;\n  }\n\n  format_textdiff(context, delta) {\n    context.out('<div class=\"jsondiffpatch-value\">');\n    this.formatTextDiffString(context, delta[0]);\n    context.out('</div>');\n  }\n}\n\nfunction htmlEscape(text) {\n  let html = text;\n  const replacements = [\n    [/&/g, '&amp;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n    [/'/g, '&apos;'],\n    [/\"/g, '&quot;'],\n  ];\n  for (let i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nconst adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {\n  const node = nodeArg || document;\n  const getElementText = ({ textContent, innerText }) =>\n    textContent || innerText;\n  const eachByQuery = (el, query, fn) => {\n    const elems = el.querySelectorAll(query);\n    for (let i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  const eachChildren = ({ children }, fn) => {\n    for (let i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(\n    node,\n    '.jsondiffpatch-arrow',\n    ({ parentNode, children, style }) => {\n      const arrowParent = parentNode;\n      const svg = children[0];\n      const path = svg.children[1];\n      svg.style.display = 'none';\n      const destination = getElementText(\n        arrowParent.querySelector('.jsondiffpatch-moved-destination'),\n      );\n      const container = arrowParent.parentNode;\n      let destinationElem;\n      eachChildren(container, child => {\n        if (child.getAttribute('data-key') === destination) {\n          destinationElem = child;\n        }\n      });\n      if (!destinationElem) {\n        return;\n      }\n      try {\n        const distance = destinationElem.offsetTop - arrowParent.offsetTop;\n        svg.setAttribute('height', Math.abs(distance) + 6);\n        style.top = `${-8 + (distance > 0 ? 0 : distance)}px`;\n        const curve =\n          distance > 0\n            ? `M30,0 Q-10,${Math.round(distance / 2)} 26,${distance - 4}`\n            : `M30,${-distance} Q-10,${Math.round(-distance / 2)} 26,4`;\n        path.setAttribute('d', curve);\n        svg.style.display = '';\n      } catch (err) {}\n    },\n  );\n};\n\n/* jshint camelcase: true */\n/* eslint-enable camelcase */\n\nexport const showUnchanged = (show, node, delay) => {\n  const el = node || document.body;\n  const prefix = 'jsondiffpatch-unchanged-';\n  const classes = {\n    showing: `${prefix}showing`,\n    hiding: `${prefix}hiding`,\n    visible: `${prefix}visible`,\n    hidden: `${prefix}hidden`,\n  };\n  const list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(() => {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  const intervalId = setInterval(() => {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(() => {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(() => {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nexport const hideUnchanged = (node, delay) => showUnchanged(false, node, delay);\n\nexport default HtmlFormatter;\n\nlet defaultInstance;\n\nexport function format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n","import BaseFormatter from './base';\n\nclass AnnotatedFormatter extends BaseFormatter {\n  constructor() {\n    super();\n    this.includeMoveDestinations = false;\n  }\n\n  prepareContext(context) {\n    super.prepareContext(context);\n    context.indent = function(levels) {\n      this.indentLevel =\n        (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n      this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n    };\n    context.row = (json, htmlNote) => {\n      context.out(\n        '<tr><td style=\"white-space: nowrap;\">' +\n          '<pre class=\"jsondiffpatch-annotated-indent\"' +\n          ' style=\"display: inline-block\">',\n      );\n      context.out(context.indentPad);\n      context.out('</pre><pre style=\"display: inline-block\">');\n      context.out(json);\n      context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n      context.out(htmlNote);\n      context.out('</div></td></tr>');\n    };\n  }\n\n  typeFormattterErrorFormatter(context, err) {\n    context.row('', `<pre class=\"jsondiffpatch-error\">${err}</pre>`);\n  }\n\n  formatTextDiffString(context, value) {\n    const lines = this.parseTextDiff(value);\n    context.out('<ul class=\"jsondiffpatch-textdiff\">');\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.out(\n        '<li><div class=\"jsondiffpatch-textdiff-location\">' +\n          `<span class=\"jsondiffpatch-textdiff-line-number\">${\n            line.location.line\n          }</span><span class=\"jsondiffpatch-textdiff-char\">${\n            line.location.chr\n          }</span></div><div class=\"jsondiffpatch-textdiff-line\">`,\n      );\n      const pieces = line.pieces;\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        context.out(\n          `<span class=\"jsondiffpatch-textdiff-${piece.type}\">${\n            piece.text\n          }</span>`,\n        );\n      }\n      context.out('</div></li>');\n    }\n    context.out('</ul>');\n  }\n\n  rootBegin(context, type, nodeType) {\n    context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n    if (type === 'node') {\n      context.row('{');\n      context.indent();\n    }\n    if (nodeType === 'array') {\n      context.row(\n        '\"_t\": \"a\",',\n        'Array delta (member names indicate array indices)',\n      );\n    }\n  }\n\n  rootEnd(context, type) {\n    if (type === 'node') {\n      context.indent(-1);\n      context.row('}');\n    }\n    context.out('</table>');\n  }\n\n  nodeBegin(context, key, leftKey, type, nodeType) {\n    context.row(`&quot;${key}&quot;: {`);\n    if (type === 'node') {\n      context.indent();\n    }\n    if (nodeType === 'array') {\n      context.row(\n        '\"_t\": \"a\",',\n        'Array delta (member names indicate array indices)',\n      );\n    }\n  }\n\n  nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n    if (type === 'node') {\n      context.indent(-1);\n    }\n    context.row(`}${isLast ? '' : ','}`);\n  }\n\n  /* jshint camelcase: false */\n\n  /* eslint-disable camelcase */\n  format_unchanged() {}\n\n  format_movedestination() {}\n\n  format_node(context, delta, left) {\n    // recurse\n    this.formatDeltaChildren(context, delta, left);\n  }\n}\n\n/* eslint-enable camelcase */\n\nconst wrapPropertyName = name =>\n  `<pre style=\"display:inline-block\">&quot;${name}&quot;</pre>`;\n\nconst deltaAnnotations = {\n  added(delta, left, key, leftKey) {\n    const formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return `new value${formatLegend}`;\n    }\n    if (typeof leftKey === 'number') {\n      return `insert at index ${leftKey}${formatLegend}`;\n    }\n    return `add property ${wrapPropertyName(leftKey)}${formatLegend}`;\n  },\n  modified(delta, left, key, leftKey) {\n    const formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return `modify value${formatLegend}`;\n    }\n    if (typeof leftKey === 'number') {\n      return `modify at index ${leftKey}${formatLegend}`;\n    }\n    return `modify property ${wrapPropertyName(leftKey)}${formatLegend}`;\n  },\n  deleted(delta, left, key, leftKey) {\n    const formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return `delete value${formatLegend}`;\n    }\n    if (typeof leftKey === 'number') {\n      return `remove index ${leftKey}${formatLegend}`;\n    }\n    return `delete property ${wrapPropertyName(leftKey)}${formatLegend}`;\n  },\n  moved(delta, left, key, leftKey) {\n    return (\n      'move from <span title=\"(position to remove at original state)\">' +\n      `index ${leftKey}</span> to <span title=\"(position to insert at final` +\n      ` state)\">index ${delta[1]}</span>`\n    );\n  },\n  textdiff(delta, left, key, leftKey) {\n    const location =\n      typeof leftKey === 'undefined'\n        ? ''\n        : typeof leftKey === 'number'\n          ? ` at index ${leftKey}`\n          : ` at property ${wrapPropertyName(leftKey)}`;\n    return (\n      `text diff${location}, format is <a href=\"https://code.google.com/` +\n      'p/google-diff-match-patch/wiki/Unidiff\">a variation of Unidiff</a>'\n    );\n  },\n};\n\nconst formatAnyChange = function(context, delta) {\n  const deltaType = this.getDeltaType(delta);\n  const annotator = deltaAnnotations[deltaType];\n  const htmlNote =\n    annotator &&\n    annotator.apply(annotator, Array.prototype.slice.call(arguments, 1));\n  let json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\n/* eslint-disable camelcase */\nAnnotatedFormatter.prototype.format_added = formatAnyChange;\nAnnotatedFormatter.prototype.format_modified = formatAnyChange;\nAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\nAnnotatedFormatter.prototype.format_moved = formatAnyChange;\nAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\n/* eslint-enable camelcase */\n\n/* jshint camelcase: true */\n\nexport default AnnotatedFormatter;\n\nlet defaultInstance;\n\nexport function format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new AnnotatedFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n","import BaseFormatter from './base';\n\nconst OPERATIONS = {\n  add: 'add',\n  remove: 'remove',\n  replace: 'replace',\n  move: 'move',\n};\n\nclass JSONFormatter extends BaseFormatter {\n  constructor() {\n    super();\n    this.includeMoveDestinations = true;\n  }\n\n  prepareContext(context) {\n    super.prepareContext(context);\n    context.result = [];\n    context.path = [];\n    context.pushCurrentOp = function(obj) {\n      const { op, value } = obj;\n      const val = {\n        op,\n        path: this.currentPath(),\n      };\n      if (typeof value !== 'undefined') {\n        val.value = value;\n      }\n      this.result.push(val);\n    };\n\n    context.pushMoveOp = function(to) {\n      const from = this.currentPath();\n      this.result.push({\n        op: OPERATIONS.move,\n        from,\n        path: this.toPath(to),\n      });\n    };\n\n    context.currentPath = function() {\n      return `/${this.path.join('/')}`;\n    };\n\n    context.toPath = function(toPath) {\n      const to = this.path.slice();\n      to[to.length - 1] = toPath;\n      return `/${to.join('/')}`;\n    };\n  }\n\n  typeFormattterErrorFormatter(context, err) {\n    context.out(`[ERROR] ${err}`);\n  }\n\n  rootBegin() {}\n  rootEnd() {}\n\n  nodeBegin({ path }, key, leftKey) {\n    path.push(leftKey);\n  }\n\n  nodeEnd({ path }) {\n    path.pop();\n  }\n\n  /* jshint camelcase: false */\n  /* eslint-disable camelcase */\n\n  format_unchanged() {}\n\n  format_movedestination() {}\n\n  format_node(context, delta, left) {\n    this.formatDeltaChildren(context, delta, left);\n  }\n\n  format_added(context, delta) {\n    context.pushCurrentOp({ op: OPERATIONS.add, value: delta[0] });\n  }\n\n  format_modified(context, delta) {\n    context.pushCurrentOp({ op: OPERATIONS.replace, value: delta[1] });\n  }\n\n  format_deleted(context) {\n    context.pushCurrentOp({ op: OPERATIONS.remove });\n  }\n\n  format_moved(context, delta) {\n    const to = delta[1];\n    context.pushMoveOp(to);\n  }\n\n  format_textdiff() {\n    throw new Error('Not implemented');\n  }\n\n  format(delta, left) {\n    const context = {};\n    this.prepareContext(context);\n    this.recurse(context, delta, left);\n    return context.result;\n  }\n}\n\n/* jshint camelcase: true */\n/* eslint-enable camelcase */\n\nexport default JSONFormatter;\n\nconst last = arr => arr[arr.length - 1];\n\nconst sortBy = (arr, pred) => {\n  arr.sort(pred);\n  return arr;\n};\n\nconst compareByIndexDesc = (indexA, indexB) => {\n  const lastA = parseInt(indexA, 10);\n  const lastB = parseInt(indexB, 10);\n  if (!(isNaN(lastA) || isNaN(lastB))) {\n    return lastB - lastA;\n  } else {\n    return 0;\n  }\n};\n\nconst opsByDescendingOrder = removeOps => sortBy(removeOps, (a, b) => {\n  const splitA = a.path.split('/');\n  const splitB = b.path.split('/');\n  if (splitA.length !== splitB.length) {\n    return splitA.length - splitB.length;\n  } else {\n    return compareByIndexDesc(last(splitA), last(splitB));\n  }\n});\n\nexport const partitionOps = (arr, fns) => {\n  const initArr = Array(fns.length + 1).fill().map(() => []);\n  return arr\n    .map(item => {\n      let position = fns.map(fn => fn(item)).indexOf(true);\n      if (position < 0) {\n        position = fns.length;\n      }\n      return { item, position };\n    })\n    .reduce((acc, item) => {\n      acc[item.position].push(item.item);\n      return acc;\n    }, initArr);\n};\nconst isMoveOp = ({ op }) => op === 'move';\nconst isRemoveOp = ({ op }) => op === 'remove';\n\nconst reorderOps = diff => {\n  const [moveOps, removedOps, restOps] =\n    partitionOps(diff, [isMoveOp, isRemoveOp]);\n  const removeOpsReverse = opsByDescendingOrder(removedOps);\n  return [...removeOpsReverse, ...moveOps, ...restOps];\n};\n\nlet defaultInstance;\n\nexport const format = (delta, left) => {\n  if (!defaultInstance) {\n    defaultInstance = new JSONFormatter();\n  }\n  return reorderOps(defaultInstance.format(delta, left));\n};\n\nexport const log = (delta, left) => {\n  console.log(format(delta, left));\n};\n","import chalk from 'chalk';\nimport BaseFormatter from './base';\n\nfunction chalkColor(name) {\n  return (\n    (chalk && chalk[name]) ||\n    function(...args) {\n      return args;\n    }\n  );\n}\n\nconst colors = {\n  added: chalkColor('green'),\n  deleted: chalkColor('red'),\n  movedestination: chalkColor('gray'),\n  moved: chalkColor('yellow'),\n  unchanged: chalkColor('gray'),\n  error: chalkColor('white.bgRed'),\n  textDiffLine: chalkColor('gray'),\n};\n\nclass ConsoleFormatter extends BaseFormatter {\n  constructor() {\n    super();\n    this.includeMoveDestinations = false;\n  }\n\n  prepareContext(context) {\n    super.prepareContext(context);\n    context.indent = function(levels) {\n      this.indentLevel =\n        (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n      this.indentPad = new Array(this.indentLevel + 1).join('  ');\n      this.outLine();\n    };\n    context.outLine = function() {\n      this.buffer.push(`\\n${this.indentPad || ''}`);\n    };\n    context.out = function(...args) {\n      for (let i = 0, l = args.length; i < l; i++) {\n        const lines = args[i].split('\\n');\n        let text = lines.join(`\\n${this.indentPad || ''}`);\n        if (this.color && this.color[0]) {\n          text = this.color[0](text);\n        }\n        this.buffer.push(text);\n      }\n    };\n    context.pushColor = function(color) {\n      this.color = this.color || [];\n      this.color.unshift(color);\n    };\n    context.popColor = function() {\n      this.color = this.color || [];\n      this.color.shift();\n    };\n  }\n\n  typeFormattterErrorFormatter(context, err) {\n    context.pushColor(colors.error);\n    context.out(`[ERROR]${err}`);\n    context.popColor();\n  }\n\n  formatValue(context, value) {\n    context.out(JSON.stringify(value, null, 2));\n  }\n\n  formatTextDiffString(context, value) {\n    const lines = this.parseTextDiff(value);\n    context.indent();\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i];\n      context.pushColor(colors.textDiffLine);\n      context.out(`${line.location.line},${line.location.chr} `);\n      context.popColor();\n      const pieces = line.pieces;\n      for (\n        let pieceIndex = 0, piecesLength = pieces.length;\n        pieceIndex < piecesLength;\n        pieceIndex++\n      ) {\n        const piece = pieces[pieceIndex];\n        context.pushColor(colors[piece.type]);\n        context.out(piece.text);\n        context.popColor();\n      }\n      if (i < l - 1) {\n        context.outLine();\n      }\n    }\n    context.indent(-1);\n  }\n\n  rootBegin(context, type, nodeType) {\n    context.pushColor(colors[type]);\n    if (type === 'node') {\n      context.out(nodeType === 'array' ? '[' : '{');\n      context.indent();\n    }\n  }\n\n  rootEnd(context, type, nodeType) {\n    if (type === 'node') {\n      context.indent(-1);\n      context.out(nodeType === 'array' ? ']' : '}');\n    }\n    context.popColor();\n  }\n\n  nodeBegin(context, key, leftKey, type, nodeType) {\n    context.pushColor(colors[type]);\n    context.out(`${leftKey}: `);\n    if (type === 'node') {\n      context.out(nodeType === 'array' ? '[' : '{');\n      context.indent();\n    }\n  }\n\n  nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n    if (type === 'node') {\n      context.indent(-1);\n      context.out(nodeType === 'array' ? ']' : `}${isLast ? '' : ','}`);\n    }\n    if (!isLast) {\n      context.outLine();\n    }\n    context.popColor();\n  }\n\n  /* jshint camelcase: false */\n  /* eslint-disable camelcase */\n\n  format_unchanged(context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    this.formatValue(context, left);\n  }\n\n  format_movedestination(context, delta, left) {\n    if (typeof left === 'undefined') {\n      return;\n    }\n    this.formatValue(context, left);\n  }\n\n  format_node(context, delta, left) {\n    // recurse\n    this.formatDeltaChildren(context, delta, left);\n  }\n\n  format_added(context, delta) {\n    this.formatValue(context, delta[0]);\n  }\n\n  format_modified(context, delta) {\n    context.pushColor(colors.deleted);\n    this.formatValue(context, delta[0]);\n    context.popColor();\n    context.out(' => ');\n    context.pushColor(colors.added);\n    this.formatValue(context, delta[1]);\n    context.popColor();\n  }\n\n  format_deleted(context, delta) {\n    this.formatValue(context, delta[0]);\n  }\n\n  format_moved(context, delta) {\n    context.out(`==> ${delta[1]}`);\n  }\n\n  format_textdiff(context, delta) {\n    this.formatTextDiffString(context, delta[0]);\n  }\n}\n\n/* eslint-enable camelcase */\n\n/* jshint camelcase: true */\n\nexport default ConsoleFormatter;\n\nlet defaultInstance;\n\nexport const format = (delta, left) => {\n  if (!defaultInstance) {\n    defaultInstance = new ConsoleFormatter();\n  }\n  return defaultInstance.format(delta, left);\n};\n\nexport function log(delta, left) {\n  console.log(format(delta, left));\n}\n","// use as 2nd parameter for JSON.parse to revive Date instances\nexport default function dateReviver(key, value) {\n  let parts;\n  if (typeof value === 'string') {\n    // eslint-disable-next-line max-len\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+-])(\\d{2}):(\\d{2}))$/.exec(\n      value,\n    );\n    if (parts) {\n      return new Date(\n        Date.UTC(\n          +parts[1],\n          +parts[2] - 1,\n          +parts[3],\n          +parts[4],\n          +parts[5],\n          +parts[6],\n          +(parts[7] || 0),\n        ),\n      );\n    }\n  }\n  return value;\n}\n","import DiffPatcher from './diffpatcher';\nexport DiffPatcher from './diffpatcher';\n\nexport * as formatters from './formatters/index';\n\nexport * as console from './formatters/console';\n\nexport function create(options) {\n  return new DiffPatcher(options);\n}\n\nexport dateReviver from './date-reviver';\n\nlet defaultInstance;\n\nexport function diff() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.diff.apply(defaultInstance, arguments);\n}\n\nexport function patch() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.patch.apply(defaultInstance, arguments);\n}\n\nexport function unpatch() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.unpatch.apply(defaultInstance, arguments);\n}\n\nexport function reverse() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.reverse.apply(defaultInstance, arguments);\n}\n\nexport function clone() {\n  if (!defaultInstance) {\n    defaultInstance = new DiffPatcher();\n  }\n  return defaultInstance.clone.apply(defaultInstance, arguments);\n}\n"],"names":["Processor","constructor","options","selfOptions","pipes","pipe","name","pipeArg","processor","process","input","context","nextPipe","lastPipe","lastContext","nextAfterChildren","next","hasResult","result","undefined","Pipe","filters","Error","debug","length","index","filter","log","filterName","exiting","resultCheck","msg","console","append","push","arguments","prepend","unshift","indexOf","list","map","f","after","params","Array","prototype","slice","call","splice","apply","before","replace","remove","clear","shouldHaveResult","should","error","noResult","Context","setResult","exit","switchTo","child","parent","childName","root","children","isArray","a","cloneRegExp","re","regexMatch","exec","toString","RegExp","clone","arg","Date","getTime","cloned","Object","hasOwnProperty","DiffContext","left","right","cloneDiffValues","defaultClone","PatchContext","delta","ReverseContext","diffFilter","trivialMatchesDiffFilter","leftType","rightType","leftIsArray","rightIsArray","patchFilter","trivialMatchesPatchFilter","nested","regexArgs","reverseFilter","trivialReferseFilter","collectChildrenDiffFilter","_t","objectsDiffFilter","propertyFilter","nestedPatchFilter","collectChildrenPatchFilter","nestedReverseFilter","collectChildrenReverseFilter","defaultMatch","array1","array2","index1","index2","lengthMatrix","match","len1","len2","x","y","matrix","Math","max","backtrack","subsequence","sequence","indices1","indices2","sameLetter","valueAtMatrixAbove","valueAtMatrixLeft","get","innerContext","join","ARRAY_MOVE","arrayIndexOf","array","item","i","arraysHaveMatchByRef","val1","val2","matchItems","value1","value2","objectHash","matchByPosition","hash1","hash2","hashCache1","hashCache2","arraysDiffFilter","matchContext","commonHead","commonTail","trimmed1","trimmed2","seq","lcs","removedItems","detectMove","arrays","includeValueOnMove","removedItemsLength","indexOnArray2","isMove","removeItemIndex1","compare","numerically","b","numericallyBy","toRemove","toInsert","toModify","parseInt","value","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","arraysReverseFilter","newName","substr","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","deleteIndex","datesDiffFilter","TEXT_DIFF","DEFAULT_MIN_LENGTH","cachedDiffPatch","getDiffMatchPatch","required","instance","diff_match_patch","dmp","err","diff_match_patch_not_found","diff","txt1","txt2","patch_toText","patch_make","patch","results","patch_apply","patch_fromText","textPatchFailed","textsDiffFilter","minLength","textDiff","diffMatchPatch","textsPatchFilter","textDeltaReverse","l","line","lineTmp","header","headerRegex","lineHeader","lines","split","lineStart","textsReverseFilter","DiffPatcher","trivial","dates","texts","reverse","unpatch","getObjectKeys","keys","obj","names","property","trimUnderscore","str","arrayKeyToSortNumber","key","arrayKeyComparer","key1","key2","BaseFormatter","format","prepareContext","recurse","finalize","buffer","out","typeFormattterNotFound","deltaType","typeFormattterErrorFormatter","_ref","leftKey","movedFrom","isLast","useMoveOriginHere","leftValue","type","getDeltaType","nodeType","nodeBegin","rootBegin","typeFormattter","stack","nodeEnd","rootEnd","formatDeltaChildren","self","forEachDeltaKey","fn","arrayKeys","moveDestinations","includeMoveDestinations","parseTextDiff","output","lineOutput","pieces","location","chr","pieceIndex","piecesLength","piece","pieceOutput","text","HtmlFormatter","formatValue","htmlEscape","JSON","stringify","formatTextDiffString","decodeURI","nodeClass","hasArrows","adjustArrows","format_unchanged","format_movedestination","format_node","format_added","format_modified","format_deleted","format_moved","format_textdiff","html","replacements","jsondiffpatchHtmlFormatterAdjustArrows","nodeArg","node","document","getElementText","textContent","innerText","eachByQuery","el","query","elems","querySelectorAll","eachChildren","_ref2","_ref3","parentNode","style","arrowParent","svg","path","display","destination","querySelector","container","destinationElem","getAttribute","distance","offsetTop","setAttribute","abs","top","curve","round","showUnchanged","show","delay","body","prefix","classes","showing","hiding","visible","hidden","classList","add","setTimeout","intervalId","setInterval","clearInterval","hideUnchanged","defaultInstance","AnnotatedFormatter","indent","levels","indentLevel","indentPad","row","json","htmlNote","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","deleted","moved","textdiff","formatAnyChange","annotator","OPERATIONS","move","JSONFormatter","pushCurrentOp","op","val","currentPath","pushMoveOp","to","from","toPath","pop","last","arr","sortBy","pred","compareByIndexDesc","indexA","indexB","lastA","lastB","isNaN","opsByDescendingOrder","removeOps","splitA","splitB","partitionOps","fns","initArr","fill","position","reduce","acc","isMoveOp","isRemoveOp","_ref4","reorderOps","moveOps","removedOps","restOps","removeOpsReverse","chalkColor","chalk","_len","args","_key","colors","movedestination","unchanged","textDiffLine","ConsoleFormatter","outLine","_len2","_key2","color","pushColor","popColor","shift","dateReviver","parts","UTC","create"],"mappings":"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"}