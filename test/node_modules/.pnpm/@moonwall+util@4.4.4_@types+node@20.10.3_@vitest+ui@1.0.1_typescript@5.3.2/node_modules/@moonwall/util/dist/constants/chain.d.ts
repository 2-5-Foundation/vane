declare const SPECS_PATH = "./moonbeam-test-specs";
declare const DEBUG_MODE: string | boolean;
declare const DISPLAY_LOG: string | boolean;
declare const MOONBEAM_LOG: string;
declare const BASE_PATH: string;
declare const CUSTOM_SPEC_PATH: string;
declare const BINARY_PATH: string;
declare const RELAY_BINARY_PATH: string;
declare const RELAY_LOG: string;
declare const OVERRIDE_RUNTIME_PATH: string;
declare const SPAWNING_TIME = 20000;
declare const ETHAPI_CMD: string;
declare const WASM_RUNTIME_OVERRIDES: string;
declare const RELAY_CHAIN_NODE_NAMES: string[];
declare const ZERO_ADDRESS = "0x0000000000000000000000000000000000000000";
declare const TREASURY_ACCOUNT = "0x6d6f646c70632f74727372790000000000000000";
declare const GLMR = 1000000000000000000n;
declare const MILLIGLMR = 1000000000000000n;
declare const MICROGLMR = 1000000000000n;
declare const DEFAULT_GENESIS_BALANCE: bigint;
declare const DEFAULT_GENESIS_STAKING: bigint;
declare const DEFAULT_GENESIS_MAPPING: bigint;
declare const PROPOSAL_AMOUNT: bigint;
declare const VOTE_AMOUNT: bigint;
declare const MIN_GLMR_STAKING: bigint;
declare const MIN_GLMR_DELEGATOR: bigint;
declare const WEIGHT_PER_SECOND = 1000000000000n;
declare const GAS_PER_SECOND = 40000000n;
declare const GAS_PER_WEIGHT: bigint;
declare const GAS_PER_POV_BYTES = 4n;
declare const BLOCK_WEIGHT_LIMIT: bigint;
declare const BLOCK_GAS_LIMIT: bigint;
declare const EXTRINSIC_GAS_LIMIT: bigint;
declare const MAX_BLOCK_DEV_POV: number;
declare const MAX_ETH_POV_PER_TX: bigint;
declare const EXTRINSIC_BASE_WEIGHT = 250000000;
declare const WEIGHT_PER_GAS: bigint;
declare const MIN_GAS_PRICE = 10000000000n;
declare const GAS_LIMIT_POV_RATIO = 4;
declare const PRECOMPILE_PARACHAIN_STAKING_ADDRESS = "0x0000000000000000000000000000000000000800";
declare const PRECOMPILE_CROWDLOAN_REWARDS_ADDRESS = "0x0000000000000000000000000000000000000801";
declare const PRECOMPILE_NATIVE_ERC20_ADDRESS = "0x0000000000000000000000000000000000000802";
declare const PRECOMPILE_DEMOCRACY_ADDRESS = "0x0000000000000000000000000000000000000803";
declare const PRECOMPILE_XTOKENS_ADDRESS = "0x0000000000000000000000000000000000000804";
declare const PRECOMPILE_RELAY_ENCODER_ADDRESS = "0x0000000000000000000000000000000000000805";
declare const PRECOMPILE_XCM_TRANSACTOR_ADDRESS_V1 = "0x0000000000000000000000000000000000000806";
declare const PRECOMPILE_AUTHOR_MAPPING_ADDRESS = "0x0000000000000000000000000000000000000807";
declare const PRECOMPILE_BATCH_ADDRESS = "0x0000000000000000000000000000000000000808";
declare const PRECOMPILE_RANDOMNESS_ADDRESS = "0x0000000000000000000000000000000000000809";
declare const PRECOMPILE_CALL_PERMIT_ADDRESS = "0x000000000000000000000000000000000000080a";
declare const PRECOMPILE_PROXY_ADDRESS = "0x000000000000000000000000000000000000080b";
declare const PRECOMPILE_XCM_UTILS_ADDRESS = "0x000000000000000000000000000000000000080c";
declare const PRECOMPILE_XCM_TRANSACTOR_ADDRESS_V2 = "0x000000000000000000000000000000000000080d";
declare const PRECOMPILE_COUNCIL_ADDRESS = "0x000000000000000000000000000000000000080e";
declare const PRECOMPILE_TECH_COMMITTEE_ADDRESS = "0x000000000000000000000000000000000000080f";
declare const PRECOMPILE_TREASURY_COUNCIL_ADDRESS = "0x0000000000000000000000000000000000000810";
declare const PRECOMPILE_DISPATCH_ADDRESS = "0x0000000000000000000000000000000000000401";
declare const PRECOMPILE_REFERENDA_ADDRESS = "0x0000000000000000000000000000000000000811";
declare const PRECOMPILE_CONVICTION_VOTING_ADDRESS = "0x0000000000000000000000000000000000000812";
declare const PRECOMPILE_PREIMAGE_ADDRESS = "0x0000000000000000000000000000000000000813";
declare const PRECOMPILE_OPEN_TECH_COMMITTEE_ADDRESS = "0x0000000000000000000000000000000000000814";
declare const PRECOMPILE_GMP_ADDRESS = "0x0000000000000000000000000000000000000816";
declare const PRECOMPILES: {
    readonly ParachainStaking: "0x0000000000000000000000000000000000000800";
    readonly CrowdloanRewards: "0x0000000000000000000000000000000000000801";
    readonly NativeErc20: readonly ["0x0000000000000000000000000000000000000802", "IERC20"];
    readonly Democracy: "0x0000000000000000000000000000000000000803";
    readonly Xtokens: "0x0000000000000000000000000000000000000804";
    readonly RelayEncoder: "0x0000000000000000000000000000000000000805";
    readonly XcmTransactorV1: "0x0000000000000000000000000000000000000806";
    readonly AuthorMapping: "0x0000000000000000000000000000000000000807";
    readonly Batch: "0x0000000000000000000000000000000000000808";
    readonly Randomness: "0x0000000000000000000000000000000000000809";
    readonly CallPermit: "0x000000000000000000000000000000000000080a";
    readonly Proxy: "0x000000000000000000000000000000000000080b";
    readonly XcmUtils: "0x000000000000000000000000000000000000080c";
    readonly XcmTransactorV2: "0x000000000000000000000000000000000000080d";
    readonly Council: readonly ["0x000000000000000000000000000000000000080e", "Collective"];
    readonly TechCommittee: readonly ["0x000000000000000000000000000000000000080f", "Collective"];
    readonly TreasuryCouncil: readonly ["0x0000000000000000000000000000000000000810", "Collective"];
    readonly Referenda: "0x0000000000000000000000000000000000000811";
    readonly ConvictionVoting: "0x0000000000000000000000000000000000000812";
    readonly Preimage: "0x0000000000000000000000000000000000000813";
    readonly Gmp: "0x0000000000000000000000000000000000000816";
};
declare const MINUTES: number;
declare const HOURS: number;
declare const DAYS: number;
declare const TWO_MINS: number;
declare const FIVE_MINS: number;
declare const TEN_MINS: number;
declare const THIRTY_MINS: number;
declare const ONE_HOURS: number;
declare const TWO_HOURS: number;
declare const THREE_HOURS: number;
declare const FOUR_HOURS: number;
declare const CONTRACT_RANDOMNESS_STATUS_DOES_NOT_EXISTS = 0;
declare const CONTRACT_RANDOMNESS_STATUS_PENDING = 1;
declare const CONTRACT_RANDOMNESS_STATUS_READY = 2;
declare const CONTRACT_RANDOMNESS_STATUS_EXPIRED = 3;
declare const CONTRACT_PROXY_TYPE_ANY = 0;
declare const CONTRACT_PROXY_TYPE_NON_TRANSFER = 1;
declare const CONTRACT_PROXY_TYPE_GOVERNANCE = 2;
declare const CONTRACT_PROXY_TYPE_STAKING = 3;
declare const CONTRACT_PROXY_TYPE_CANCEL_PROXY = 4;
declare const CONTRACT_PROXY_TYPE_BALANCES = 5;
declare const CONTRACT_PROXY_TYPE_AUTHOR_MAPPING = 6;
declare const CONTRACT_PROXY_TYPE_IDENTITY_JUDGEMENT = 7;
declare const MAX_BLOCK_WEIGHT = 500000000000;
declare const TARGET_FILL_AMOUNT: number;
declare const TARGET_FILL_PERMILL: number;
declare const WEIGHT_FEE: bigint;
declare const RUNTIME_CONSTANTS: {
    readonly MOONBASE: {
        readonly MIN_FEE_MULTIPLIER: "100000000000000000";
        readonly MAX_FEE_MULTIPLIER: "100000000000000000000000";
        readonly MIN_BASE_FEE_IN_WEI: "125000000";
        readonly MAX_BASE_FEE_IN_WEI: "125000000000000";
    };
    readonly MOONRIVER: {
        readonly MIN_FEE_MULTIPLIER: "1000000000000000000";
        readonly MAX_FEE_MULTIPLIER: "100000000000000000000000";
        readonly MIN_BASE_FEE_IN_WEI: "1250000000";
        readonly MAX_BASE_FEE_IN_WEI: "125000000000000";
    };
    readonly MOONBEAM: {
        readonly MIN_FEE_MULTIPLIER: "1000000000000000000";
        readonly MAX_FEE_MULTIPLIER: "100000000000000000000000";
        readonly MIN_BASE_FEE_IN_WEI: "125000000000";
        readonly MAX_BASE_FEE_IN_WEI: "12500000000000000";
    };
};
declare const DUMMY_REVERT_BYTECODE = "0x60006000fd";

export { BASE_PATH, BINARY_PATH, BLOCK_GAS_LIMIT, BLOCK_WEIGHT_LIMIT, CONTRACT_PROXY_TYPE_ANY, CONTRACT_PROXY_TYPE_AUTHOR_MAPPING, CONTRACT_PROXY_TYPE_BALANCES, CONTRACT_PROXY_TYPE_CANCEL_PROXY, CONTRACT_PROXY_TYPE_GOVERNANCE, CONTRACT_PROXY_TYPE_IDENTITY_JUDGEMENT, CONTRACT_PROXY_TYPE_NON_TRANSFER, CONTRACT_PROXY_TYPE_STAKING, CONTRACT_RANDOMNESS_STATUS_DOES_NOT_EXISTS, CONTRACT_RANDOMNESS_STATUS_EXPIRED, CONTRACT_RANDOMNESS_STATUS_PENDING, CONTRACT_RANDOMNESS_STATUS_READY, CUSTOM_SPEC_PATH, DAYS, DEBUG_MODE, DEFAULT_GENESIS_BALANCE, DEFAULT_GENESIS_MAPPING, DEFAULT_GENESIS_STAKING, DISPLAY_LOG, DUMMY_REVERT_BYTECODE, ETHAPI_CMD, EXTRINSIC_BASE_WEIGHT, EXTRINSIC_GAS_LIMIT, FIVE_MINS, FOUR_HOURS, GAS_LIMIT_POV_RATIO, GAS_PER_POV_BYTES, GAS_PER_SECOND, GAS_PER_WEIGHT, GLMR, HOURS, MAX_BLOCK_DEV_POV, MAX_BLOCK_WEIGHT, MAX_ETH_POV_PER_TX, MICROGLMR, MILLIGLMR, MINUTES, MIN_GAS_PRICE, MIN_GLMR_DELEGATOR, MIN_GLMR_STAKING, MOONBEAM_LOG, ONE_HOURS, OVERRIDE_RUNTIME_PATH, PRECOMPILES, PRECOMPILE_AUTHOR_MAPPING_ADDRESS, PRECOMPILE_BATCH_ADDRESS, PRECOMPILE_CALL_PERMIT_ADDRESS, PRECOMPILE_CONVICTION_VOTING_ADDRESS, PRECOMPILE_COUNCIL_ADDRESS, PRECOMPILE_CROWDLOAN_REWARDS_ADDRESS, PRECOMPILE_DEMOCRACY_ADDRESS, PRECOMPILE_DISPATCH_ADDRESS, PRECOMPILE_GMP_ADDRESS, PRECOMPILE_NATIVE_ERC20_ADDRESS, PRECOMPILE_OPEN_TECH_COMMITTEE_ADDRESS, PRECOMPILE_PARACHAIN_STAKING_ADDRESS, PRECOMPILE_PREIMAGE_ADDRESS, PRECOMPILE_PROXY_ADDRESS, PRECOMPILE_RANDOMNESS_ADDRESS, PRECOMPILE_REFERENDA_ADDRESS, PRECOMPILE_RELAY_ENCODER_ADDRESS, PRECOMPILE_TECH_COMMITTEE_ADDRESS, PRECOMPILE_TREASURY_COUNCIL_ADDRESS, PRECOMPILE_XCM_TRANSACTOR_ADDRESS_V1, PRECOMPILE_XCM_TRANSACTOR_ADDRESS_V2, PRECOMPILE_XCM_UTILS_ADDRESS, PRECOMPILE_XTOKENS_ADDRESS, PROPOSAL_AMOUNT, RELAY_BINARY_PATH, RELAY_CHAIN_NODE_NAMES, RELAY_LOG, RUNTIME_CONSTANTS, SPAWNING_TIME, SPECS_PATH, TARGET_FILL_AMOUNT, TARGET_FILL_PERMILL, TEN_MINS, THIRTY_MINS, THREE_HOURS, TREASURY_ACCOUNT, TWO_HOURS, TWO_MINS, VOTE_AMOUNT, WASM_RUNTIME_OVERRIDES, WEIGHT_FEE, WEIGHT_PER_GAS, WEIGHT_PER_SECOND, ZERO_ADDRESS };
