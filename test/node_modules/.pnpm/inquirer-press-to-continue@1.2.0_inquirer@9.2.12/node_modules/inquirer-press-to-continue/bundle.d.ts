/// <reference types="node" />
import inquirer, { Answers, Question } from 'inquirer';
import InputPromptBase from 'inquirer/lib/prompts/base.js';
import { Key, Interface } from 'node:readline';
import { Ora } from 'ora';

/**
 * Provides a description about a key.
 */
interface KeyDescriptor {
    /**
     * The value of the key.
     */
    value: string;
    /**
     * The description of the key.
     */
    key: Key;
}

declare module 'inquirer' {
    interface PressToContinuePromptOptions<T extends Answers = Answers> extends InputQuestionOptions<T> {
    }
    /**
     * Provides options for the `PressToContinuePrompt`.
     *
     * @template T
     * The type of the answers.
     */
    interface PressToContinuePrompt<T extends Answers = Answers> extends PressToContinuePromptOptions<T> {
        /**
         * @inheritdoc
         */
        type: 'press-to-continue';
        /**
         * The key the user should press.
         */
        key?: string;
        /**
         * Whether to allow any key to be pressed.
         */
        anyKey?: boolean;
        /**
         * Only allow enter to be pressed.
         */
        enter?: boolean;
        /**
         * Custom message for the "press to continue" loader
         */
        pressToContinueMessage?: string;
        /**
         * Custom options to pass to the ora spinner.
         */
        oraOptions?: Ora;
    }
    interface QuestionMap<T extends Answers = Answers> {
        /**
         * The `PressToContinuePrompt` type.
         */
        pressToContinue: PressToContinuePrompt<T>;
    }
}
declare class PressToContinuePrompt extends InputPromptBase {
    opt: inquirer.prompts.PromptOptions & {
        key: string;
        enter: boolean;
        anyKey: boolean;
        pressToContinueMessage: string;
        oraOptions: Ora;
    };
    spinner?: Ora;
    done: (value: any) => void;
    constructor(questions: Question, rl: Interface, answers: Answers);
    _run(done: (value: any) => void): this;
    _done(key: KeyDescriptor): void;
    render(): void;
}

export { KeyDescriptor, PressToContinuePrompt as default };
