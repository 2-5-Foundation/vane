import * as _moonwall_types from '@moonwall/types';
import { DevModeContext } from '@moonwall/types';
import * as _polkadot_types_types from '@polkadot/types/types';
import { ApiPromise } from '@polkadot/api';
import { SubmittableExtrinsic, ApiTypes } from '@polkadot/api/types';
import { KeyringPair } from '@polkadot/keyring/types';

declare const COUNCIL_MEMBERS: KeyringPair[];
declare const COUNCIL_THRESHOLD: number;
declare const TECHNICAL_COMMITTEE_MEMBERS: KeyringPair[];
declare const TECHNICAL_COMMITTEE_THRESHOLD: number;
declare const notePreimage: <Call extends SubmittableExtrinsic<ApiType, _polkadot_types_types.ISubmittableResult>, ApiType extends ApiTypes>(context: DevModeContext, proposal: Call, account?: KeyringPair) => Promise<string>;
declare const instantFastTrack: <Call extends SubmittableExtrinsic<ApiType, _polkadot_types_types.ISubmittableResult>, ApiType extends ApiTypes>(context: DevModeContext, proposal: string | Call, { votingPeriod, delayPeriod }?: {
    votingPeriod: number;
    delayPeriod: number;
}) => Promise<string>;
declare const execCouncilProposal: <Call extends SubmittableExtrinsic<ApiType, _polkadot_types_types.ISubmittableResult>, ApiType extends ApiTypes>(context: DevModeContext, polkadotCall: Call, index?: number, voters?: KeyringPair[], threshold?: number) => Promise<_moonwall_types.BlockCreationResponse<ApiTypes, Promise<SubmittableExtrinsic<"promise", _polkadot_types_types.ISubmittableResult>>> | _moonwall_types.ExtrinsicCreation>;
declare const proposeReferendaAndDeposit: <Call extends SubmittableExtrinsic<ApiType, _polkadot_types_types.ISubmittableResult>, ApiType extends ApiTypes>(context: DevModeContext, decisionDepositer: KeyringPair, proposal: string | Call, origin: any) => Promise<[number, string]>;
declare const dispatchAsGeneralAdmin: <Call extends SubmittableExtrinsic<ApiType, _polkadot_types_types.ISubmittableResult>, ApiType extends ApiTypes>(context: DevModeContext, call: string | Call) => Promise<void>;
declare const maximizeConvictionVotingOf: (context: DevModeContext, voters: KeyringPair[], refIndex: number) => Promise<void>;
declare const execTechnicalCommitteeProposal: <Call extends SubmittableExtrinsic<ApiType, _polkadot_types_types.ISubmittableResult>, ApiType extends ApiTypes>(context: DevModeContext, polkadotCall: Call, voters?: KeyringPair[], threshold?: number) => Promise<_moonwall_types.ExtrinsicCreation>;
declare const executeProposalWithCouncil: (api: ApiPromise, encodedHash: string) => Promise<void>;
declare const cancelReferendaWithCouncil: (api: ApiPromise, refIndex: number) => Promise<void>;

export { COUNCIL_MEMBERS, COUNCIL_THRESHOLD, TECHNICAL_COMMITTEE_MEMBERS, TECHNICAL_COMMITTEE_THRESHOLD, cancelReferendaWithCouncil, dispatchAsGeneralAdmin, execCouncilProposal, execTechnicalCommitteeProposal, executeProposalWithCouncil, instantFastTrack, maximizeConvictionVotingOf, notePreimage, proposeReferendaAndDeposit };
