import { ExtrinsicCreation, GenericContext, BlockCreation } from '@moonwall/types';
import { ApiTypes, SubmittableExtrinsic } from '@polkadot/api/types';

declare function getDevProviderPath(): Promise<string>;
type CreatedBlockResult = {
    block: {
        duration: number;
        hash: string;
    };
    result: ExtrinsicCreation | ExtrinsicCreation[] | null;
};
type CallType<TApi extends ApiTypes> = SubmittableExtrinsic<TApi> | Promise<SubmittableExtrinsic<TApi>> | `0x${string}` | Promise<string>;
declare function createDevBlock<ApiType extends ApiTypes, Calls extends CallType<ApiType> | Array<CallType<ApiType>>>(context: GenericContext, options: BlockCreation, transactions?: Calls): Promise<{
    block: {
        duration: number;
        hash: string;
        proofSize?: number;
    };
    result?: undefined;
} | {
    block: {
        duration: number;
        hash: string;
        proofSize?: number;
    };
    result: any;
}>;

export { type CallType, type CreatedBlockResult, createDevBlock, getDevProviderPath };
