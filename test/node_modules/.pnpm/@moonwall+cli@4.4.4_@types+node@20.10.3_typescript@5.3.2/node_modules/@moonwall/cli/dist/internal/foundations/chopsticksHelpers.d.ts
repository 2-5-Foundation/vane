import { GenericContext, ChopsticksBlockCreation } from '@moonwall/types';
import { WsProvider } from '@polkadot/api';
import { AugmentedEvent, ApiTypes } from '@polkadot/api/types';
import { FrameSystemEventRecord } from '@polkadot/types/lookup';

declare function getWsFromConfig(providerName?: string): Promise<WsProvider>;
declare function sendNewBlockAndCheck(context: GenericContext, expectedEvents: AugmentedEvent<ApiTypes>[]): Promise<{
    match: boolean;
    events: FrameSystemEventRecord[];
}>;
declare function createChopsticksBlock(context: GenericContext, options?: ChopsticksBlockCreation): Promise<{
    result: string;
}>;
declare function sendSetHeadRequest(newHead: string, providerName?: string): Promise<string>;
declare function sendNewBlockRequest(params?: {
    providerName?: string;
    count?: number;
    to?: number;
}): Promise<string>;
declare function sendSetStorageRequest(params?: {
    providerName?: string;
    module: string;
    method: string;
    methodParams: any[];
}): Promise<void>;

export { createChopsticksBlock, getWsFromConfig, sendNewBlockAndCheck, sendNewBlockRequest, sendSetHeadRequest, sendSetStorageRequest };
