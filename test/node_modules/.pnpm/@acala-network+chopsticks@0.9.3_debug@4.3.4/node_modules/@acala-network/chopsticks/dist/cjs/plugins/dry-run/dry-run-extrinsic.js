"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "dryRunExtrinsic", {
    enumerable: true,
    get: function() {
        return dryRunExtrinsic;
    }
});
const _utilcrypto = require("@polkadot/util-crypto");
const _nodefs = require("node:fs");
const _logger = require("../../logger.js");
const _generatehtmldiff = require("../../utils/generate-html-diff.js");
const _openhtml = require("../../utils/open-html.js");
const _context = require("../../context.js");
const dryRunExtrinsic = async (argv)=>{
    const context = await (0, _context.setupContext)(argv);
    const input = argv['address'] ? {
        call: argv['extrinsic'],
        address: argv['address']
    } : argv['extrinsic'];
    const { outcome, storageDiff } = await context.chain.dryRunExtrinsic(input, argv['at']);
    if (outcome.isErr) {
        throw new Error(outcome.asErr.toString());
    }
    _logger.defaultLogger.info(outcome.toHuman(), 'dry_run_outcome');
    if (argv['html']) {
        const filePath = await (0, _generatehtmldiff.generateHtmlDiffPreviewFile)(context.chain.head, storageDiff, (0, _utilcrypto.blake2AsHex)(argv['extrinsic'], 256));
        console.log(`Generated preview ${filePath}`);
        if (argv['open']) {
            (0, _openhtml.openHtml)(filePath);
        }
    } else if (argv['output-path']) {
        (0, _nodefs.writeFileSync)(argv['output-path'], JSON.stringify({
            outcome: outcome.toHuman(),
            storageDiff
        }, null, 2));
    } else {
        console.dir({
            outcome: outcome.toHuman(),
            storageDiff
        }, {
            depth: null,
            colors: false
        });
    }
    process.exit(0);
};
