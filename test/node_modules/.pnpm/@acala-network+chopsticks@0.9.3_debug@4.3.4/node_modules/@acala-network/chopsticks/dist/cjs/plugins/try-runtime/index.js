"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "cli", {
    enumerable: true,
    get: function() {
        return cli;
    }
});
const _nodefs = require("node:fs");
const _clioptions = require("../../cli-options.js");
const _generatehtmldiff = require("../../utils/generate-html-diff.js");
const _openhtml = require("../../utils/open-html.js");
const _context = require("../../context.js");
const cli = (y)=>{
    y.command('try-runtime', 'Runs runtime upgrade', (yargs)=>yargs.options({
            ..._clioptions.defaultOptions,
            'wasm-override': {
                desc: 'Path to WASM built with feature `try-runtime` enabled',
                string: true,
                required: true
            },
            'output-path': {
                desc: 'File path to print output',
                string: true
            },
            html: {
                desc: 'Generate html with storage diff',
                boolean: true
            },
            open: {
                desc: 'Open generated html',
                boolean: true
            }
        }), async (argv)=>{
        const context = await (0, _context.setupContext)(argv);
        const block = context.chain.head;
        const registry = await block.registry;
        registry.register({
            UpgradeCheckSelect: {
                _enum: {
                    None: null
                }
            }
        });
        const select_none = registry.createType('UpgradeCheckSelect', 'None');
        const result = await block.call('TryRuntime_on_runtime_upgrade', [
            select_none.toHex()
        ]);
        if (argv.html) {
            const filePath = await (0, _generatehtmldiff.generateHtmlDiffPreviewFile)(block, result.storageDiff, block.hash);
            console.log(`Generated preview ${filePath}`);
            if (argv.open) {
                (0, _openhtml.openHtml)(filePath);
            }
        } else if (argv.outputPath) {
            (0, _nodefs.writeFileSync)(argv.outputPath, JSON.stringify(result, null, 2));
        } else {
            console.dir(result, {
                depth: null,
                colors: false
            });
        }
        process.exit(0);
    });
};
